<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">

  <title><![CDATA[Category: Integration | Duff Qiu's Blog]]></title>
  <link href="http://duffqiu.github.io/blog/categories/integration/atom.xml" rel="self"/>
  <link href="http://duffqiu.github.io/"/>
  <updated>2015-08-14T14:42:49+08:00</updated>
  <id>http://duffqiu.github.io/</id>
  <author>
    <name><![CDATA[Duff Qiu]]></name>
    <email><![CDATA[duffqiu@gmail.com]]></email>
  </author>
  <generator uri="http://octopress.org/">Octopress</generator>

  
  <entry>
    <title type="html"><![CDATA[集成模式：标准化模式]]></title>
    <link href="http://duffqiu.github.io/blog/2015/02/02/integration-pattern-normalizer/"/>
    <updated>2015-02-02T13:14:35+08:00</updated>
    <id>http://duffqiu.github.io/blog/2015/02/02/integration-pattern-normalizer</id>
    <content type="html"><![CDATA[<h3 id="section">原由</h3>
<hr />
<p>在系统集成中，可以通过不同的接口（EndPoint）适配多个外围系统，然后转换成标准的消息与内部系统结成。这种模式叫Normalizer。即标准化模式</p>

<h3 id="section-1">解决办法</h3>
<hr />

<p>UML图例：</p>

<p><center><img src='/images/plantuml/082cc2c75b0503eae4e5e7d35888923a.png'></center></p>

<p>对于Normalizer内部，通常从逻辑上可以这样分</p>

<p><center><img src='/images/plantuml/0ae44c068daab38efeaef4c4cbd09033.png'></center></p>

<h3 id="section-2">特点说明</h3>

<ul>
  <li>对于集成简单的场景比较适用。多数用在连接多个类似的client端到一个系统</li>
  <li>如果对于Endpoint本身没有太复杂的逻辑则可以忽略Router并且合并translator的功能</li>
  <li>唯一的不足是如果集成的系统越来越多，则需要的Endpoint将成几何基数的增长</li>
  <li>可以通过Canonical Data Model(规范化数据模型)的方式来解决Normalizer模式的不足</li>
</ul>

]]></content>
  </entry>
  
</feed>
