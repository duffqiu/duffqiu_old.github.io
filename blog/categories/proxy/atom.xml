<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">

  <title><![CDATA[Category: Proxy | Duff Qiu's Blog]]></title>
  <link href="http://duffqiu.github.io/blog/categories/proxy/atom.xml" rel="self"/>
  <link href="http://duffqiu.github.io/"/>
  <updated>2015-03-03T17:54:04+08:00</updated>
  <id>http://duffqiu.github.io/</id>
  <author>
    <name><![CDATA[Duff Qiu]]></name>
    <email><![CDATA[duffqiu@gmail.com]]></email>
  </author>
  <generator uri="http://octopress.org/">Octopress</generator>

  
  <entry>
    <title type="html"><![CDATA[Ssh在linux下使用http/https代理]]></title>
    <link href="http://duffqiu.github.io/blog/2015/02/26/ssh-proxy-in-linux/"/>
    <updated>2015-02-26T18:00:30+08:00</updated>
    <id>http://duffqiu.github.io/blog/2015/02/26/ssh-proxy-in-linux</id>
    <content type="html"><![CDATA[<h3 id="section">原由</h3>
<hr />
<p>在公司有代理的环境下，如果在linux下使用github，则可以使用https的方式。
但是https的方式需要每次都输入用户名和密码（用户名可以写在url上避免输入，但是密码就必须要）
但是如果能使用ssh的rsa方式则可以避免这个麻烦，但是ssh默认是不支持使用http/https代理的。
那么有没有办法通过某种手段让ssh支持代理呢？答案是可定的，这个工具是<a href="http://www.agroman.net/corkscrew/">Corkscrew官网</a></p>

<h3 id="section-1">解决办法</h3>
<hr />

<p>通过Corkscrew来建立隧道的方式来为ssh提供代理，具体方法如下 </p>

<ul>
  <li>安装Corkscrew（主要下载源代码，然后配置、编译、安装，典型的C程序的方式）</li>
  <li>配置ssh，在~/.ssh/目录下生成一个config=文将，然后增加一行：<code>ProxyCommand /usr/local/bin/corkscrew &lt;proxy http url&gt; &lt;proxy port&gt; %h %p</code></li>
  <li>如果是新建的config文件，注意要更改一下它的权限为600，<code>chmod 600 ~/.ssh/config</code></li>
  <li>根据github的说明配置ssh的public和private key,参考<a href="https://help.github.com/articles/generating-ssh-keys/#platform-linux">git帮助</a></li>
</ul>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Mac上用google-app-engine搭建proxy]]></title>
    <link href="http://duffqiu.github.io/blog/2014/01/28/macshang-yong-google-app-engineda-jian-proxy/"/>
    <updated>2014-01-28T11:20:35+08:00</updated>
    <id>http://duffqiu.github.io/blog/2014/01/28/macshang-yong-google-app-engineda-jian-proxy</id>
    <content type="html"><![CDATA[<h4 id="section">原由</h4>
<p>在家访问Google时总时不时就无法访问，而技术类问题的搜索在百度的结果总是与期望相差太远，要不就是国外的网站无法访问，所以最好的就是使用国外的代理，作为技术人员最好的办法就是自己搭建一个。</p>

<h4 id="section-1">平台选择</h4>
<p>目前有多中选择，但是看了下攻略，最简单的方式就是用google app engine。而且有开源的proxy服务器软件Goagent以及有Mac上好用的GoagentX客户端，那么就它了。</p>

<h4 id="goagent">安装Goagent</h4>
<p>访问<a href="https://code.google.com/p/goagent/" title="官网">Goagent</a><br />
但是在没有代理的时候，访问code.google.com总是很慢，这里附上一个<a href="/assets/goagent-goagent-v3.1.5.zip">Goagent 3.1.5</a><br />
具体教程可以参考Goagent的官网
在Mac上的简单操作就是</p>

<ol>
  <li>到<a href="https://appengine.google.com/">Google App Engine</a>创建一个App</li>
  <li>解开Goagent下载下来的软件，到server/gae目录，编写gae.py文件配置密码（避免有人偷用你的流量）</li>
  <li>
    <p>使用命令上传goagent并部署</p>

    <pre><code> python upload.zip 然后按照提示操作就可（就是输入两次google account和密码）
</code></pre>
  </li>
  <li>注意：如果提示等待x秒后尝试看看部署是否成功，等待一会就好，如果不行取消当前操作(ctrol+c)重复之前的操作直到成功为止。估计又是Great Wall的问题</li>
</ol>

<h4 id="goagentx">安装GoagentX</h4>
<p>访问<a href="http://goagentx.com">GoagentX</a>，获得一个App，打开就可
然后就是简单配置GoagentX</p>

<ol>
  <li>设置AppId</li>
  <li>设置服务密码，就是在gae.py上设置的密码</li>
  <li>然后启动就可</li>
  <li>启动成功后，Mac会被自动设置了代理</li>
  <li>接着就能够访问了(如果你能看到youtube／facebook就证明OK了)</li>
  <li>如需在局域网共享，则将启动Goagent的地方勾上局域网选项，然后在代理设置里面也勾上代理选项（记得重启代理）</li>
  <li>在其它机器上配置代理服务器就可以了</li>
</ol>

<h4 id="section-2">免费增加流量</h4>
<p>Google App Engine目前是提供28个小时的前端应用免费流量，如果需要增加则再多创建一个或多个这样的应用就可。  </p>

<p>Google App Engine允许一个账户最多创建10个应用</p>
]]></content>
  </entry>
  
</feed>
