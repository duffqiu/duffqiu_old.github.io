<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">

  <title><![CDATA[Category: Appscale | Duff Qiu's Blog]]></title>
  <link href="http://duffqiu.github.io/blog/categories/appscale/atom.xml" rel="self"/>
  <link href="http://duffqiu.github.io/"/>
  <updated>2015-08-14T14:47:26+08:00</updated>
  <id>http://duffqiu.github.io/</id>
  <author>
    <name><![CDATA[Duff Qiu]]></name>
    <email><![CDATA[duffqiu@gmail.com]]></email>
  </author>
  <generator uri="http://octopress.org/">Octopress</generator>

  
  <entry>
    <title type="html"><![CDATA[Openstack上安装AppScale]]></title>
    <link href="http://duffqiu.github.io/blog/2014/02/19/openstackshang-an-zhuang-appscale/"/>
    <updated>2014-02-19T21:44:13+08:00</updated>
    <id>http://duffqiu.github.io/blog/2014/02/19/openstackshang-an-zhuang-appscale</id>
    <content type="html"><![CDATA[<h3 id="section">原由</h3>
<hr />
<p>之前用Mac安装了virtual box的Appscale，因为是Appscale的一个安装好的Image，配置一下启动就能用。但是如果真要安装到虚拟主机上，就不是这个方式了。所以找了个Openstack的Unbuntu的虚拟主机尝试安装，结果血泪不少，需要配置proxy是最啃爹的部分。估计官方没有试过在用proxy的情况下安装。</p>

<h3 id="section-1">解决办法</h3>
<hr />
<p>因为官网的文档在openstack上安装只是简单的介绍，所以中间的问题都需要自己解决了。</p>

<ul>
  <li>
    <p>安装unbuntu VM
在Openstack中生成一个instance，我这里选用了unbuntu server 12.04，估计redhat也可以，不过我没有试，配置至少要3-4G RAM，20G的硬盘，2个virtual CPU，然后启动该VM，并看看该VM最后的IP地址</p>
  </li>
  <li>
    <p>设置SSH配置
 如果用openstack安装VM后，需要用private key才可以登录(<code>ssh root@service_IP</code>)，则必须先修改SSH的配置，然密码可登录，具体方式是更改<code>/etc/ssh/sshd_conf</code>文件，将<code>PasswordAuthentication</code>参数设置为<code>true</code>，然后更改root密码用命令<code>passwd</code>，最后重启SSH，用命令<code>/etc/init.d/ssh restart</code></p>
  </li>
  <li>
    <p>设置各种应用的代理</p>
    <ul>
      <li>首先设置apt-get的代理，新增一个<code>/etc/apt/apt.conf</code>配置文件，内容为</li>
    </ul>
  </li>
</ul>

<p><code>
   Acquire::http::proxy "http://&lt;username&gt;:&lt;password&gt;@&lt;proxy&gt;:&lt;port&gt;/";
   Acquire::ftp::proxy "ftp://&lt;username&gt;:&lt;password&gt;@&lt;proxy&gt;:&lt;port&gt;/";
   Acquire::https::proxy "https://&lt;username&gt;:&lt;password&gt;@&lt;proxy&gt;:&lt;port&gt;/";
</code>
   将proxy改为对应的代理地址，port为代理端口，如果需要认证，则设置用户名和密码，不然就去掉用户名和密码</p>

<p>－ 设置ruby的gem的代理，在root的home目录下，创建.gemrc文件</p>

<p><code>
http_proxy: http://&lt;username&gt;:&lt;password&gt;@&lt;proxy&gt;:&lt;port&gt;
https_proxy: http://&lt;username&gt;:&lt;password&gt;@&lt;proxy&gt;:&lt;port&gt;
ftp_proxy: http://&lt;username&gt;:&lt;password&gt;@&lt;proxy&gt;:&lt;port&gt;
</code> <br />
   - 设置wget以及其它代理，在对应的shell文件中(如bash的.bashrc)，增加代理变量设置，然后激活<code>source .bashrc</code></p>

<p><code>
export http_proxy=http://&lt;username&gt;:&lt;password&gt;@&lt;proxy&gt;:&lt;port&gt;
export https_proxy=http://&lt;username&gt;:&lt;password&gt;@&lt;proxy&gt;:&lt;port&gt;
export ftp_proxy=http://&lt;username&gt;:&lt;password&gt;@&lt;proxy&gt;:&lt;port&gt;
export HTTP_PROXY=http://&lt;username&gt;:&lt;password&gt;@&lt;proxy&gt;:&lt;port&gt;
export HTTPS_PROXY=http://&lt;username&gt;:&lt;password&gt;@&lt;proxy&gt;:&lt;port&gt;
export FTP_PROXY=http://&lt;username&gt;:&lt;password&gt;@&lt;proxy&gt;:&lt;port&gt;
</code>   </p>

<ul>
  <li>设置java代理，因为安装的中间会用到java的下载等，在对应的shell文件中(如bash的.bashrc)，增加代理变量设置</li>
</ul>

<p><code>
export _JAVA_OPTIONS='-Dhttp.proxyHost=&lt;proxy&gt; -Dhttp.proxyPort=&lt;port&gt;'
</code>  <br />
   - 增加git代理（针对git协议），因为要用到apt-get，所以apt-get的代理设置要先安装好
      先用apt-get安装socat
      <code>sudo apt-get install socat</code>，
      然后配置git代理文件，先<code>sudo touch /usr/bin/gitproxy</code>，然后编辑该文件的内容为</p>

<p><code>sh
PROXY=&lt;proxy&gt;
PROXYPORT=&lt;port&gt;
PROXYAUTH=&lt;username:password&gt;
exec socat STDIO PROXY:$PROXY:$1:$2,proxyport=$PROXYPORT,proxyauth=$PROXYAUTH
</code>        </p>

<p>然后更改gitproxy的权限为可执行<code>sudo  chmod +x /usr/bin/gitproxy</code>，最后是更改git的配置，用命令<code>git config --global core.gitproxy gitproxy</code>
   这里有点啃爹，因为这个时候你还没有安装git，根本就没有git命令，所以只能先用 apt-get安装git，尽管Appscale的脚本有自动安装git。或者等到安装过程中git无发clone appscale的时候再配这一步</p>

<ul>
  <li>更新Python的pip工具
 这个是最坑爹的，因为pip依赖与Python，而如果VM没有带Python，只能等到安装到pip这一步出错了再来配置它，因为Appscale依赖的python的版本的问题，自行先安装Python似乎不是太好。这里需要更新pip是因为Appscale安装的是1.0版本，这个版本太低，无法用代理的方式（似乎是没有读取系统代理变量），所以需要更新到新的版本。执行一下命令：</li>
</ul>

<p><code>
sudo apt-get purge python-pip
curl https://raw.github.com/pypa/pip/master/contrib/get-pip.py | sudo python
</code>   </p>

<ul>
  <li>
    <p>设置path</p>

    <p>增加<code>/usr/local/bin</code> (因为pip安装在这个目录中)，并在home目录激活shell配置<code>source .bashrc</code></p>
  </li>
  <li>安装AppScale
    <ol>
      <li>可以用密码登录SSH了和apt-get以及wget的代理已经配置好</li>
      <li>执行命令：<code>export HOME=/root</code> 和<code>wget -O - http://bootstrap.appscale.com | sh</code></li>
      <li>如果错误提示是git，则安装git代理，重新这行2的命令</li>
      <li>如果错误提示是pip，则无需重新执行2的命令，因为appscale目录已经存在，只需要到<code>appscale/debian</code>目录下执行<code>appscale_build.sh</code>就可</li>
      <li>如果错误提示是java，则安装JAVA代理，然后执行4</li>
    </ol>
  </li>
  <li>安装AppScale-Tool
到<code>appscale-tools/debian</code>目录下执行<code>appscale_build.sh</code>，然后确保一下内容已经配置到shell文件(.bashrc)中</li>
</ul>

<p><code>
export TOOLS_PATH=/usr/local/appscale-tools
export PATH=${PATH}:${TOOLS_PATH}/bin
</code>    </p>

<ul>
  <li>配置Appscale</li>
</ul>

<p>执行<code>appscale init cluster</code>，然后更改AppScalefile，将<code>ips_layout</code>里的IP地址都改为VM的地址</p>

<ul>
  <li>运行AppScale</li>
</ul>

<p>执行<code>appscale up</code>
中间会要求输入admin的管理员的email和密码</p>

<ul>
  <li>查看安装后状态</li>
</ul>

<p>如果正常启动，则可以通过<code>http://&lt;vm ip&gt;:1080/status</code>查看当前状态。如果只是这页全现实勾也是不行的，需要用启动时配置的email登录，然后点击Monit Dashboard(这个默认用户名和密码是admin/monit)，所有的process都应该时Running的状态</p>

<p>如果正常启动，则可以通过<code>http://&lt;vm ip&gt;:1080/status</code>查看当前状态。点击TaskQueue Monitor(这个默认用户名和密码是appscale/appscale)，则应该现实有两个工作的Workers，一个是apichecker一个是appscaledashboard</p>

<p>到此，真个Appscale的手工安装就结束了，然后就是可以部署应用。Googel App Engine的开发如何做，我还没有去看，后面有机会再写这个部分</p>

<p><strong>个人感叹：Open source真个给我们带来了很多的便利和选择，但是这的有很多坑是这些创始者没有遇到过。真的是需要有个个方面的能力才能去在生产环境中到它。</strong></p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Appscale安装]]></title>
    <link href="http://duffqiu.github.io/blog/2014/02/11/appscalean-zhuang/"/>
    <updated>2014-02-11T21:49:00+08:00</updated>
    <id>http://duffqiu.github.io/blog/2014/02/11/appscalean-zhuang</id>
    <content type="html"><![CDATA[<h3 id="section">原由</h3>
<hr />
<p>之前看了下Appscale的介绍，觉得还是不错的，这两天自己装一个玩玩。</p>

<h3 id="section-1">安装过程</h3>
<hr />

<h4 id="section-2">准备工作</h4>
<ol>
  <li>下载并安装<a href="https://www.virtualbox.org">virtual box</a></li>
  <li>
    <p>下载并安装<a href="https://github.com/mitchellh/vagrant">vagrant</a>，不过好像中国下载有问题，这里有个baidu pan的copy，版本<a href="http://pan.baidu.com/s/1dDtaIul">vagrant 1.4.3</a></p>
  </li>
  <li>下载并安装<a href="https://github.com/AppScale/appscale-tools">appscale-tools</a>，帮助安装配置appscale的，可以参照<a href="https://github.com/AppScale/appscale-tools/wiki/Installing-the-AppScale-Tools-on-Mac-OS-X">官方的安装说明</a>使用<code>brew</code>安装，</li>
  <li>下载<a href="http://download.appscale.com/apps/AppScale%201.13.0%20VirtualBox%20Image">Appscale for mac的virtual box的image</a>，因为很大，直接下载会有问题，这里分享一个已经下好的在百度云盘的copy，版本为<a href="http://pan.baidu.com/s/1i3p4NsT">AppScale 1.13.0</a> </li>
</ol>

<h4 id="vm">安装VM过程</h4>
<ol>
  <li>创建一个appscale的目录</li>
  <li>获取一个<a href="https://s3.amazonaws.com/appscale_CDN/files/Vagrantfile">Vagrant的配置文件</a>，也可以通过命令<code>vagrant init</code>获得  </li>
  <li>打开Vagrantfile，将<code>config.vm.box_url</code>配置为你下载好的Appscale for mac的virtual box的image  </li>
  <li>将<code>config.vm.network</code>配置成你的网络地址，但是不要用host机器的IP</li>
  <li>
    <p>启动vm</p>

    <pre><code>vagrant up
vagrant ssh     # now you're in the VM as the "vagrant" user
sudo -s passwd  # change the root password
</code></pre>
  </li>
</ol>

<h4 id="appscale">部署AppScale</h4>

<ol>
  <li>初始化一个配置文件AppScalefile，需要执行<code>appscale init cluster</code></li>
  <li>
    <p>修改AppScalefile中的<code>ips_layout</code>，将IP都设置为你刚才配置的VM IP，然后启动Appscale，命令：<code>appscale up</code>      </p>

    <pre><code>ips_layout:
  master : 192.168.33.10
  appengine: 192.168.33.10
  database: 192.168.33.10
  zookeeper: 192.168.33.10
</code></pre>
  </li>
</ol>

<h4 id="section-3">部署应用</h4>

<p>用命令：<code>appscale deploy &lt;app path&gt;</code>         </p>

<h4 id="section-4">关闭</h4>
<ol>
  <li>关闭appscale，用命令<code>appscale down</code></li>
  <li>关闭VM，用命令<code>vagrant halt</code></li>
</ol>

<h4 id="appscale-tools">Appscale tools安装过程(官方介绍复制)</h4>

<p>安装命令：</p>

<pre><code>brew install wget
brew install ssh-copy-id
brew install swig
wget https://github.com/AppScale/appscale-tools/archive/1.13.0.tar.gz -O appscale-tools-1.13.0.tar.gz
tar xvf appscale-tools-1.13.0.tar.gz

sudo ./appscale-tools-1.13.0/osx/appscale_install.sh
</code></pre>

<p>将<code>/usr/local/share/python:/usr/local/appscale-tools/bin</code>放入到path中就可以了</p>

<p>小提示：
1. 官网说用euca-version检查安装是否成功，但是根本就没有这个命令。这个好像是给EC2和S3用的python工具，可以用<code>port search 'euca'</code>查到
2. Vagrant有对应的oh-my-zsh的plugins，配置进.zshrc文件中就可以了</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[技术杂谈1]]></title>
    <link href="http://duffqiu.github.io/blog/2014/02/09/ji-zhu-za-tan-1/"/>
    <updated>2014-02-09T18:15:58+08:00</updated>
    <id>http://duffqiu.github.io/blog/2014/02/09/ji-zhu-za-tan-1</id>
    <content type="html"><![CDATA[<h3 id="section">原由</h3>
<hr />

<p>这个类别主要是想记录以下跑题中看到的一些“新”技术，或者是一些有意思的技术内容，但是不会详细展开，如有时间和必要会有专门的blog来描述某个内容或话题</p>

<h3 id="section-1">今天的内容有</h3>
<hr />

<ol>
  <li>
    <p>云上的Jenkins，由<a href="http://www.cloudbees.com">Cloudbees公司</a>提供，提供免费的有限的使用，但是需要用到的地方，其实都有免费的软件／服务，如Jenkins的程序，Github管理代码等，唯一的好处是不用自己来搭建、维护服务器。我找到它的原因是看到它的Jenkins能自动部署到Goolge App Engine上，而 Jenkins还没有提供类似的Plugin，或许直接用shell命令就能做到，后面有机会用到再展开这个。</p>
  </li>
  <li>
    <p>开源的类似Google App Engine的Paas的平台<a href="https://github.com/AppScale/appscale">AppScale</a>，<a href="http://www.youtube.com/user/AppScaleSystems">youtube的AppScale介绍</a>（不过需要代理才可以看，我前面由介绍如何搭建代理服务）。建议开发Google App Engine应用的开发者都自己搭建一套，<a href="http://www.appscale.com/features">好处</a>是：</p>

    <ul>
      <li>便于直接本地测试、部署和运行</li>
      <li>需要部署私有云（特别是大型企业）</li>
      <li>需要使用其它Google App Engine不支持的APIs</li>
      <li>Google App Engine全APIs兼容</li>
      <li>可用于生产环境的平台（Google App Engine不适合生产环境？）</li>
      <li>
        <p>不再依赖于Google，可以部署在多个云平台如Amazon和虚拟机等</p>

        <div style="text-decoration:underline; font-size: 16px; color: red" onclick="showdiv('app')"> AppScale架构图 </div>
      </li>
    </ul>

    <div style="display:none" class="prev" id="app" onclick="hidediv('app')">
	
 <img src="http://www.appscale.com/assets/img/appscale_stack.png" title="点击关闭" />
	
 </div>
  </li>
  <li>
    <p><a href="http://www.docker.io">docker</a>，轻量级的应用容器，不过还没成熟和商业化，值得关注。我还没有升入去看，只能提一下而已</p>
  </li>
</ol>

]]></content>
  </entry>
  
</feed>
