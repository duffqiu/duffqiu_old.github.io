<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">

  <title><![CDATA[Category: Maven | Duff Qiu's Blog]]></title>
  <link href="http://duffqiu.github.io/blog/categories/maven/atom.xml" rel="self"/>
  <link href="http://duffqiu.github.io/"/>
  <updated>2014-02-23T15:08:30+08:00</updated>
  <id>http://duffqiu.github.io/</id>
  <author>
    <name><![CDATA[Duff Qiu]]></name>
    <email><![CDATA[duffqiu@gmail.com]]></email>
  </author>
  <generator uri="http://octopress.org/">Octopress</generator>

  
  <entry>
    <title type="html"><![CDATA[Maven工程中加入PlantUML]]></title>
    <link href="http://duffqiu.github.io/blog/2014/02/13/mavengong-cheng-zhong-jia-ru-plantuml/"/>
    <updated>2014-02-13T23:37:47+08:00</updated>
    <id>http://duffqiu.github.io/blog/2014/02/13/mavengong-cheng-zhong-jia-ru-plantuml</id>
    <content type="html"><![CDATA[<h3 id="section">原由</h3>
<p>设计于编码的最好实践是设计文档与代码文档放在最近的地方，便于同时修改和更新。最好都放入到一个代码工程中</p>

<h3 id="section-1">解决办法</h3>
<p>PlantUML的Mavin Plugin是最好的解决办法。在Maven工程中建一个目录存放PlantUML的设计文件，txt文件就可以。如：<code>src/main/plantuml</code></p>

<ol>
  <li>
    <p>然后确保已经安装好了graphvizDot。</p>
  </li>
  <li>
    <p>然后就可以写plantuml的文本</p>
  </li>
  <li>
    <p>修改maven的工程的pom.xml文件，增加<a href="https://github.com/duffqiu/maven-plantuml-plugin">PlantUML的Maven Plugin</a>，注意用的版本，我用时maven plugin最新的版本为7954，plantuml版本是7991，代码如下</p>
  </li>
</ol>

<p>``` sh</p>

<pre><code>&lt;plugin&gt;
  &lt;groupId&gt;com.github.jeluard&lt;/groupId&gt;
  &lt;artifactId&gt;plantuml-maven-plugin&lt;/artifactId&gt;
  &lt;version&gt;7954&lt;/version&gt;
  &lt;configuration&gt;
    &lt;graphvizDot&gt;/opt/local/bin/dot&lt;/graphvizDot&gt;
    &lt;sourceFiles&gt;
      &lt;directory&gt;${basedir}&lt;/directory&gt;
      &lt;includes&gt;
        &lt;include&gt;src/main/plantuml/*.txt&lt;/include&gt;
      &lt;/includes&gt;
    &lt;/sourceFiles&gt;
  &lt;/configuration&gt;
  &lt;dependencies&gt;
    &lt;dependency&gt;
      &lt;groupId&gt;net.sourceforge.plantuml&lt;/groupId&gt;
      &lt;artifactId&gt;plantuml&lt;/artifactId&gt;
      &lt;version&gt;7991&lt;/version&gt;
    &lt;/dependency&gt;
  &lt;/dependencies&gt;
&lt;/plugin&gt;
</code></pre>

<p>```</p>

<p>因为用port安装的graphvizDot目录不在<code>/usr/bin</code>下，所以需要特定指定改目录</p>

<p>然后用maven的build的target：<code>com.github.jeluard:plantuml-maven-plugin:generate</code>就可以将plantuml下的文件转成UML图形了。图形文件放在<code>target/plantuml</code>目录下</p>

<p>如果用Eclipse，则可以安装对应的<a href="http://plantuml.sourceforge.net/updatesitejuno/">eclipse插件，安装地址 </a>，这样在写plantuml文本的时候就可以同时看到图形了。</p>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Maven Tips: Artifact查找顺序]]></title>
    <link href="http://duffqiu.github.io/blog/2014/02/08/maven-tips-artifactcha-zhao-shun-xu/"/>
    <updated>2014-02-08T14:36:17+08:00</updated>
    <id>http://duffqiu.github.io/blog/2014/02/08/maven-tips-artifactcha-zhao-shun-xu</id>
    <content type="html"><![CDATA[<h3 id="section">原由</h3>

<p>因为要用到一个maven plugin的snapshot版本，所以需要增加一个专门的snapshot repository，但是增加了后总是不起左右</p>

<h3 id="section-1">解决办法</h3>

<p>尝试了多次以后，发现是maven的settings.xml的配置上问题，因为我增加了一个mirror从而造成了新增的repository不起作用。<br />
解决的方式去掉mirror的配置，增加repository到profile中，并激活
提示：maven下载artifactor的顺序为pom.xml上的repository配置，然后是settings.xml的mirror配置，然后才是profiles中的repository配置</p>

<p><a name="rep-seq"></a></p>

<div style="text-decoration:underline; font-size: 16px; color: red" onclick="showdiv('pic')"> Maven下载artifactor的顺序</div>

<div style="display:none" class="prev" id="pic" onclick="hidediv('pic');self.location.href='#rep-seq'">

<img src="http://maven.apache.org/repository/maven-repositories.png" title="点击关闭" />

</div>

<h3 id="repository">比较好用的repository</h3>

<p><a name="rep"></a></p>

<div style="text-decoration:underline; font-size: 16px; color: red" onclick="showdiv('rep-code')" title="点击打开">repository配置</div>

<div style="display:none" class="prev" id="rep-code" onclick="hidediv('rep-code');self.location.href='#rep'" title="点击关闭">

{% codeblock lang:xml %}

			<repository>
			   <id>Codehaus Snapshots</id>
			   <url>http://nexus.codehaus.org/snapshots/</url>
			   <snapshots>
			       <enabled>true</enabled>
			   </snapshots>
			   <releases>
			       <enabled>false</enabled>
			   </releases>
			</repository>
			
			<repository>
			    <id>MavenCentral</id>
			    <name>Maven repository</name>
			    <url>http://repo1.maven.org/maven2</url>
			    <releases>
			        <enabled>true</enabled>
			    </releases>
			    <snapshots>
			        <enabled>false</enabled>
			    </snapshots>
			</repository>
			
			<repository>
			    <id>objectweb</id>
			    <name>Objectweb repository</name>
			    <url>http://maven.objectweb.org/maven2</url>
			    <releases>
			        <enabled>true</enabled>
			    </releases>
			    <snapshots>
			        <enabled>false</enabled>
			    </snapshots>
			</repository>
			
			<repository>
			    <id>jboss</id>
			    <name>JBoss Maven2 repository</name>
			    <url>http://repository.jboss.com/maven2/</url>
			    <snapshots>
			        <enabled>false</enabled>
			    </snapshots>
			    <releases>
			        <enabled>true</enabled>
			    </releases>
			</repository>
			
			<repository>
			    <id>apache.snapshots</id>
			    <name>Apache Snapshot Repository</name>
			    <url>
			        http://people.apache.org/repo/m2-snapshot-repository
			    </url>
			    <releases>
			        <enabled>false</enabled>
			    </releases>
			    <snapshots>
			        <enabled>true</enabled>
			    </snapshots>
			</repository>
			
			<repository>
			    <id>ops4j.repository</id>
			    <name>OPS4J Repository</name>
			    <url>http://repository.ops4j.org/maven2</url>
			    <releases>
			        <enabled>true</enabled>
			    </releases>
			    <snapshots>
			        <enabled>false</enabled>
			    </snapshots>
			</repository>

{% endcodeblock %}

</div>
]]></content>
  </entry>
  
</feed>
