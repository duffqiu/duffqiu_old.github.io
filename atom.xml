<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">

  <title><![CDATA[Duff Qiu's Blog]]></title>
  <link href="http://duffqiu.github.io/atom.xml" rel="self"/>
  <link href="http://duffqiu.github.io/"/>
  <updated>2014-01-27T16:07:54+08:00</updated>
  <id>http://duffqiu.github.io/</id>
  <author>
    <name><![CDATA[Duff Qiu]]></name>
    <email><![CDATA[duffqiu@gmail.com]]></email>
  </author>
  <generator uri="http://octopress.org/">Octopress</generator>

  
  <entry>
    <title type="html"><![CDATA[开始写第一篇blog]]></title>
    <link href="http://duffqiu.github.io/blog/2014/01/26/kai-shi-xie-di-%5B%3F%5D-pian-blog/"/>
    <updated>2014-01-26T23:36:24+08:00</updated>
    <id>http://duffqiu.github.io/blog/2014/01/26/kai-shi-xie-di-[?]-pian-blog</id>
    <content type="html"><![CDATA[<h4>要简单，你必须有利器</h4>

<p>要简单用好Octepress，首先要看看markdown语法（链接我前面有提到），基本很简单，半个小时就能看懂，剩下实操就可。</p>

<p>然后就是需要有个工具，下载了个<a href="http://moustand.com">Mou</a>，完全免费，到目前为止感觉很好用</p>

<h4>开始写第一篇blog</h4>

<p>首先通过命令生成第一篇文章</p>

<pre><code> rake new_post\["&lt;文章标题&gt;"\] #&lt;文章标题&gt;替换成你的文章标题，可以是中文，最后生成的文件名自动转为拼音，这里用\是使用zsh shell自动生成的
</code></pre>

<p>然后通过mou打开生成好的文件用markdown语法进行编辑
当你第一次打开文件的时候，你会发现这个文件有文件头</p>

<p><img class="left" src="http://duffqiu.github.io/images/Snip20140126_1.png" width="400" height="1000" title="Head of post" alt="headfile"></p>

<p>注意几个内容：</p>

<ul>
<li>如果不需要comments，可以设置为false。后面有介绍如何配置comments</li>
<li>为分类写分类名，后面会将如何配置分类的plugin。这个例子我用了Octopress做分类名</li>
</ul>


<p>然后就是按照markdown的方式写内容了。
写完了以后，则需要运行以下命令进行部署</p>

<pre><code>rake generate
rake deploy
</code></pre>

<p>以后就是重复上面的步骤就可以。</p>

<h4>配置Octopress，更本地化</h4>

<h5>用微博配置About me</h5>

<p>通常在主页的侧边栏说明一下自己是谁，最简单的方式或许是直接连接自己的微博。具体步骤如下</p>

<ol>
<li><p>激活About me。</p>

<p>Octopress已经准备了一个aboutme的侧边栏文件，在对应的Octopresss目录的/source/<em>includes/custom/asides子目录下的about.html文件
编辑octopress的配置文件</em>config.yml，修改default_asides项，增加内容:</p>

<pre><code>custom/asides/about.html
</code></pre></li>
<li><p>加入微博内容</p>

<p> 微博的插入代码可以到<a href="http://app.weibo.com/tool/weiboshow?sudaref=open.weibo.com" title="微博秀">微博的开放平台</a>获取（不要copy搜索出来，很可能旧了）</p>

<p> 然后将代码放入到about.html文件
 如我的about.html文件内容</p>

<pre><code> &lt;section&gt;
  &lt;h1&gt;About Me&lt;/h1&gt;
  &lt;iframe width="100%" height="550" class="share_self"  frameborder="0" scrolling="no" src="http://widget.weibo.com/weiboshow/index.php?language=&amp;width=0&amp;height=550&amp;fansRow=2&amp;ptype=1&amp;speed=300&amp;skin=1&amp;isTitle=0&amp;noborder=0&amp;isWeibo=1&amp;isFans=0&amp;uid=1872168377&amp;verifier=1cd3a528&amp;dpc=1"&gt;&lt;/iframe&gt;
 &lt;/section&gt;
</code></pre></li>
<li><p>重修部署</p>

<pre><code>rake generate
rake deploy
</code></pre></li>
</ol>


<p>这个时候主页和每个页面都会出现你的微博了。如果只想出现在主页上，后面介绍如何配置post页的配置，配置完后就只有主页出现了。</p>

<h5>配置comment</h5>

<p>octopress已经集成了<a href="http://www.disqus.com%20disqus%E5%AE%98%E7%BD%91">disqus</a>系统，据说不是太好用，没有去试，只是感觉纯老外的东西，被中国用的很少，所以试着配置国内的<a href="http://dev.duoshuo.com%20%E5%A4%9A%E8%AF%B4%E5%AE%98%E7%BD%91">多说</a></p>

<ol>
<li><p>用微博／百度账户开通多说，并配置一个应用指向你的blog，获得这个应用的short name</p></li>
<li><p>在octopress的配置文件中增加以下内容</p>

<pre><code> #duoshuo comments
 duoshuo_comments: true
 duoshuo_short_name: &lt;你的多说的应用名&gt;  
</code></pre></li>
<li><p>修改source/_includes/article.html文件，在disqus配置后面</p>

<pre><code> `

 `
</code></pre>

<p>增加多说的配置</p>

<pre><code>`

   | &lt;a href="#comments"&gt;Comments&lt;/a&gt;

  `    
</code></pre></li>
<li><p>在source/_includes/post/目录里面增加一个duoshuo.html模块文件，然后从多说的应用对应的工具里面获取通用代码(不要用网上搜索到的代码)放入这个文件中</p></li>
<li><p>在source/_layouts/post.html 中的 disqus代码下</p>

<p>&#8220;</p>

<p>增加多说模块</p>

<p>`
     <section>
     <h1>Comments</h1>
     <div id="comments" aria-live="polite"><!-- Duoshuo Comment BEGIN -->
 <div class="ds-thread"></div></p></li>
</ol>


<script type="text/javascript">
var duoshuoQuery = {short_name:"duffqiu"};
    (function() {
        var ds = document.createElement('script');
        ds.type = 'text/javascript';ds.async = true;
        ds.src = 'http://static.duoshuo.com/embed.js';
        ds.charset = 'UTF-8';
        (document.getElementsByTagName('head')[0] 
        || document.getElementsByTagName('body')[0]).appendChild(ds);
    })();
    </script>


<!-- Duoshuo Comment END -->


<p></div></p>

<pre><code>    &lt;/section&gt;
    `        
</code></pre>

<ol>
<li><p>取消disqus</p>

<p>编辑_config.yml文件，将配置项disqus_show_comment_count设置为false就可以</p></li>
<li><p>然后就是重新部署</p>

<pre><code> rake generate
 rake deploy
</code></pre></li>
</ol>


<p>**到目前为止，一个octopress在github上的配置就基本完成了
Octopress还有不少功能，后面用到再补充了</p>

<h4>监控你的blog</h4>

<p>最简单的方法是使用<a href="https://www.google.com/analytics/">google analytics</a>，octopress已经集成了它，需要做的事情是</p>

<ol>
<li>先在google analytics上开设一个web的app，获得tracking_id</li>
<li>然后修改_config.yml，找到google_analytics_tracking_id，填上你的tracking_id。</li>
<li>重新部署就可以了</li>
</ol>


<p>注意： _config.yml文件的配置要每个选项&#8221;:&ldquo;后面需要有一个空格</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Octopress在github上建blog的准备工作]]></title>
    <link href="http://duffqiu.github.io/blog/2014/01/25/octopresszai-githubshang-jian-blogde-zhun-bei-gong-zuo/"/>
    <updated>2014-01-25T23:03:42+08:00</updated>
    <id>http://duffqiu.github.io/blog/2014/01/25/octopresszai-githubshang-jian-blogde-zhun-bei-gong-zuo</id>
    <content type="html"><![CDATA[<h3>需要一堆的软件</h3>

<p>我都是在Mac上安装的，windows真的没有兴趣再试多一次了</p>

<h4>Mac系统的准备工作</h4>

<p>这个部分或许和安装<a href="http://octopress.org" title="Octopress官网">Octopress</a>没什么关系，但是用Mac系统的话最好都装上，通常都用的上</p>

<ul>
<li><p>安装<a href="http://www.macports.org/index.php">MacPorts</a>，官网有比较详细的介绍，可以下pkg安装；也可以源文件安装，但是前提是必须安装xcode的command line工具，运行一下命令安装。</p>

<pre><code> sudo xcode-select --install
</code></pre>

<p>  之前也是用pkg方式安装的，但是用</p>

<pre><code>sudo port -v selfupgrad
</code></pre>

<p>的时候出现了错误，所以还是安装上xcode的command line工具就好了，好像是OSX Mavericks版本才有？这个问题是通过stackover上的帖子<a href="http://stackoverflow.com/questions/19622337/cant-update-macports-with-mac-os-x-mavericks">cant-update-macports-with-mac-os-x-mavericks</a>的解答获得的。port工具可以帮助安装所需要软件以及其依赖的软件，省去了很多找软件的麻烦，另外一个和macports差不多的软件管理工具是<a href="http://brew.sh" title="Brew官网">HomeBrew</a></p></li>
<li><p>安装<a href="http://git-scm.com/">Git</a>工具，如何使用Git还是看官方文档吧，这里就不讲了</p></li>
<li><p>安装ruby，OSX已经自带了</p></li>
<li><p>用MacPorts安装rbenv</p>

<pre><code>sudo port install rbenv
</code></pre>

<p>安装octopress需要，但是具体什么用没有细研究</p></li>
<li><p>配置zsh shell，建议用zsh shell，具体如何配置可以参考Mactalk，如果后面讲书的内容写到blog里，是否有侵权？</p></li>
</ul>


<h4>获取Octopress并安装相应的包</h4>

<ol>
<li>在机器上建立一个本地的git repo，并进入这个目录</li>
<li><p>获取Octopress源码</p>

<pre><code>git clone git://github.com/imathis/octopress.git octopress
</code></pre></li>
<li><p>安装依赖工具</p>

<pre><code>cd octopress
gem install bundler
rbenv rehash #还是不太明白这个具体做什么用
bundle install
</code></pre></li>
<li><p>安装Octopress默认的Theme</p>

<pre><code>rake install
</code></pre></li>
</ol>


<h4>配置Github</h4>

<p>生成一个名为<your github name>.github.io的repository，注意这里<your github name>是你的github的账户名，要用.io不是.com</p>

<h4>初始化octopress并部署到Github</h4>

<ol>
<li><p>关联octopress和github</p>

<pre><code>rake setup_github_pages
</code></pre>

<p>根据提示输入<your github name>.github.io的repository对应的地址</p></li>
<li><p>部署octpress到Github</p>

<pre><code>rake generate #生成静态文件
rake deploy #部署静态文件到github
</code></pre></li>
<li><p>Push原文件到Github的source branch上，如果不做这步，github将只有生成好的文件</p>

<pre><code>git add .
git commit -m &lt;'your message'&gt;
git push origin source
</code></pre></li>
</ol>


<p>到这一步，基本上就将Octopress基本配置好了，后面将讲讲如何写blogger和配置Octopress</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[First Time to Setup Octopress in Github]]></title>
    <link href="http://duffqiu.github.io/blog/2014/01/25/first-time-to-setup-octopress-in-github/"/>
    <updated>2014-01-25T16:33:01+08:00</updated>
    <id>http://duffqiu.github.io/blog/2014/01/25/first-time-to-setup-octopress-in-github</id>
    <content type="html"><![CDATA[<h3>为什么要建这个博客呢？</h3>

<p>最近小孩放假在家，总爱写些短文，但是写完了就没了，所以想想是不是建个blog来记录一下。前两天看见<a href="http://weibo.com/acette" title="Leo's Weibo">Leo</a>同学在Github上用<a href="http://www.octopress.org" title="Octopress">Octopress</a>开的blog看得挺简单，直接用接近文本的<a href="http://wowubuntu.com/markdown/" title="markdown中文">markdown</a>语法写，所以今天下午baidu＋google的方式在自己的<a href="http://github.com/duffqiu" title="Duff's Github">Github</a>上试验一下，然后再打算给小孩开一个。</p>

<p>谁知道弄了一半才发现果然是只能给程序猿的东东，每次建个post都要用命令生成静态代码，然后再部署。。。这些果然不是一般人能用的。就如同它号称的“给黑客的blog框架”</p>

<p>另外从学习安装、试用的过程看，octopress真的不太适合用windows的童鞋，最好是用Apple Mac，简单很多。这两天刚看完<a href="%22http://www.amazon.cn/MacTalk%C2%B7%E4%BA%BA%E7%94%9F%E5%85%83%E7%BC%96%E7%A8%8B-%E6%B1%A0%E5%BB%BA%E5%BC%BA-%E8%91%97/dp/B00FF5G3GK/ref=sr_1_1?ie=UTF8&amp;qid=1390661141&amp;sr=8-1&amp;keywords=mactalk%22">Mactalk</a>，感觉真的是不错，后面再来补这个的学习笔记，这也是我买的第一本收费的电子书，尽管只有¥2.99。</p>

<p>建议有Mac的童鞋都读读，里面提到了不少工具的用法。</p>

<p>不过弄完了一个下午，只有一个结论，那就是不适合小孩用，看来还要再花时间给小孩找个合适的，难道是个机会？儿童blog平台？只有iPad／android版就可以了，无需电脑版。</p>
]]></content>
  </entry>
  
</feed>
